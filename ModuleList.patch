--- /usr/local/lib/python3.6/dist-packages/torch/nn/modules/container.py
+++ /usr/local/lib/python3.6/dist-packages/torch/nn/modules/container.py
@@ -36,6 +36,7 @@
             idx += len(self)
         return str(idx)
 
+    @_copy_to_script_wrapper
     def __getitem__(self, idx):
         if isinstance(idx, slice):
             return self.__class__(list(self._modules.values())[idx])
@@ -56,15 +57,18 @@
         str_indices = [str(i) for i in range(len(self._modules))]
         self._modules = OrderedDict(list(zip(str_indices, self._modules.values())))
 
+    @_copy_to_script_wrapper
     def __len__(self):
         return len(self._modules)
 
+    @_copy_to_script_wrapper
     def __iter__(self):
         return iter(self._modules.values())
 
     def __iadd__(self, modules):
         return self.extend(modules)
 
+    @_copy_to_script_wrapper
     def __dir__(self):
         keys = super(ModuleList, self).__dir__()
         keys = [key for key in keys if not key.isdigit()]
@@ -104,3 +108,6 @@
             self.add_module(str(offset + i), module)
         return self
 
+    def forward(self):
+        raise NotImplementedError()
+